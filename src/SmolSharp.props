<Project>
	<PropertyGroup>
		<DefineConstants>WINDOWS</DefineConstants>
		<PublishAot>true</PublishAot>
		<ImplicitUsings>disable</ImplicitUsings>
	</PropertyGroup>

	<!-- Use bflat's zerolib as the standard library -->
	<!-- See https://github.com/bflattened/bflat/ for more details! -->
	<Import Project=".\BFlat.ZeroLib\BFlat.ZeroLib.projitems" Label="Shared" />
	<PropertyGroup>
		<NoStdLib>true</NoStdLib>
		<NoConfig>true</NoConfig>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
		<RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>
		<IlcSystemModule>$(MSBuildProjectName)</IlcSystemModule>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<EntryPointSymbol>smolsharp_main</EntryPointSymbol>
		<DebugType>none</DebugType>
	</PropertyGroup>

	<ItemGroup>
		<DirectPInvoke Include="kernel32" />
		<DirectPInvoke Include="shell32" />
		<DirectPInvoke Include="user32" />
		<DirectPInvoke Include="ntdll" />
		<DirectPInvoke Include="gdi32" />
	</ItemGroup>

	<ItemGroup>
		<LinkerArg Remove="$(LinkerArg)"/>
		<LinkerArg Include="/align:16"></LinkerArg>
		<LinkerArg Include="/manifestuac:no"></LinkerArg>
		<LinkerArg Include="/opt:ref /opt:icf"></LinkerArg>
		<LinkerArg Include="/safeseh:no"></LinkerArg>
		<LinkerArg Include="/emittoolversioninfo:no"></LinkerArg>
		<LinkerArg Include="/emitpogophaseinfo"></LinkerArg>
		<LinkerArg Include="/nodefaultlib"></LinkerArg>
		<LinkerArg Include="/fixed"></LinkerArg> <!-- disabling relocations makes the linker skip emitting the .reloc section, which saves us about ~100 bytes -->
		<LinkerArg Include="/merge:.modules=.rdata"></LinkerArg>
		<LinkerArg Include="/merge:.managedcode=.text"></LinkerArg>
		<LinkerArg Include="user32.lib"></LinkerArg>
		<LinkerArg Include="shell32.lib"></LinkerArg>
		<LinkerArg Include="gdi32.lib"></LinkerArg>
		<LinkerArg Include="&quot;$(IntermediateOutputPath)x86-stubs.obj&quot;"></LinkerArg>
	</ItemGroup>

	<PropertyGroup>
		<IlcDisableReflection>true</IlcDisableReflection>
		<StackTraceSupport>false</StackTraceSupport> <!-- .NET 8+ -->
		<IlcGenerateStackTraceData>false</IlcGenerateStackTraceData> <!-- < .NET 8 -->
		<IlcFoldIdenticalMethodBodies>true</IlcFoldIdenticalMethodBodies>
		<IlcDehydrate>false</IlcDehydrate>
		<IlcGenerateWin32Resources>false</IlcGenerateWin32Resources> <!-- .NET 8 -->
		<Optimize>true</Optimize>
		<OptimizationPreference>Size</OptimizationPreference>
	</PropertyGroup>
	
	<Target Name="ModifyObj" BeforeTargets="LinkNative">
		<Exec Command="objcopy --remove-section .pdata &quot;$(NativeObject)&quot;" />
		<Exec Command="objcopy -w --set-section-alignment *=1 &quot;$(NativeObject)&quot;" />
	</Target>

	<UsingTask
		  TaskName="TrimNullBytes"
		  TaskFactory="RoslynCodeTaskFactory"
		  AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll"
	>
		<ParameterGroup>
			<TargetPath ParameterType="System.String" Required="true"/>
		</ParameterGroup>
		
		<Task>
			<Using Namespace="System"/>
			<Using Namespace="System.IO"/>
			<Code Type="Fragment" Language="cs">
				<![CDATA[
				var file = File.ReadAllBytes(TargetPath);
				int i = file.Length - 1;
				while (file[i] == 0x00)
					--i;

				byte[] trimmed = new byte[i + 1];
				Array.Copy(file, trimmed, i + 1);
				File.WriteAllBytes(TargetPath, trimmed);
				]]>
			</Code>
		</Task>
	</UsingTask>

	<Target Name="ModifyBinary" AfterTargets="LinkNative">
		<TrimNullBytes TargetPath="$(NativeBinary)"/> 
	</Target>

	<Target Name="RemoveIlcSwitches" BeforeTargets="IlcCompile" DependsOnTargets="WriteIlcRspFileForCompilation">
		<ItemGroup>
			<IlcArg Remove="--runtimeknob:RUNTIME_IDENTIFIER=win-x64" />
			<IlcArg Remove="--resilient" />
		</ItemGroup>
		<WriteLinesToFile File="%(ManagedBinary.IlcRspFile)" Lines="@(IlcArg)" Overwrite="true" WriteOnlyWhenDifferent="true" />
	</Target>

	<!-- < .NET 8 -->
	<Target Name="RemoveWin32Resources" BeforeTargets="LinkNative" Outputs="$(_Win32ResFile)">
		<PropertyGroup>
			<_Win32ResFile></_Win32ResFile>
		</PropertyGroup>
	</Target>

	<Target Name="RewriteToX86" BeforeTargets="SetupOSSpecificProps">
		<PropertyGroup>
			<_targetArchitecture>x86</_targetArchitecture>
		</PropertyGroup>
	</Target>

	<Target Name="BuildX86Stubs" AfterTargets="SetupOSSpecificProps" BeforeTargets="LinkNative">
		<Exec Command="&quot;$(_CppToolsDirectory)\ml.exe&quot; /c /Fo&quot;$(IntermediateOutputPath)x86-stubs.obj&quot; &quot;$(MSBuildThisFileDirectory)x86-stubs.asm&quot;" />
	</Target>

	<Target Name="RemoveSDKLibs" AfterTargets="SetupOSSpecificProps">
		<ItemGroup>
			<LinkerArg Remove="@(NativeLibrary->'&quot;%(Identity)&quot;')"/>
		</ItemGroup>
	</Target>
	
	<!-- The project file pretends this is .NET, but it's not .NET. Remove all assembly references the .NET SDK added. -->
	<Target Name="CustomizeReferences" BeforeTargets="BeforeCompile" AfterTargets="FindReferenceAssembliesForReferences">
		<ItemGroup>
			<ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" />
			<ReferencePath Remove="@(ReferencePath)" />
		</ItemGroup>
	</Target>

	<!-- The AOT compiler would want to mirror these as AppContext switches. Prevent that. -->
	<Target Name="RemoveHostConfigurationOptions" BeforeTargets="WriteIlcRspFileForCompilation" DependsOnTargets="PrepareForILLink">
		<ItemGroup>
			<RuntimeHostConfigurationOption Remove="@(RuntimeHostConfigurationOption)" />
		</ItemGroup>
	</Target>

</Project>